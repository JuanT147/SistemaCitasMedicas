# Generated by Django 5.2.1 on 2025-05-29 02:10

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('servicios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(help_text='DNI de 8 dígitos', max_length=8, unique=True, validators=[django.core.validators.RegexValidator('^\\d{8}$', 'El DNI debe contener 8 dígitos numéricos.')])),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1, null=True)),
            ],
            options={
                'verbose_name': 'Datos Personales',
                'verbose_name_plural': 'Datos Personales',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('correo_institucional', models.EmailField(help_text='Correo institucional de la universidad', max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('es_estudiante', models.BooleanField(default=False)),
                ('es_personal_salud', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario del Sistema',
                'verbose_name_plural': 'Usuarios del Sistema',
            },
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('persona', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='usuarios.persona')),
                ('codigo_estudiante', models.CharField(help_text='Código único de estudiante de 8 dígitos', max_length=8, unique=True, validators=[django.core.validators.RegexValidator('^\\d{8}$', 'El código de estudiante debe contener 8 dígitos numéricos.')])),
                ('escuela_profesional', models.CharField(choices=[('ING_SOFTWARE', 'Ingeniería de Software'), ('ARQUITECTURA', 'Arquitectura'), ('DERECHO', 'Derecho')], max_length=100)),
                ('semestre_academico', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
            },
        ),
        migrations.AddField(
            model_name='persona',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PersonalSalud',
            fields=[
                ('persona', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='usuarios.persona')),
                ('especialidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_asignado', to='servicios.especialidadmedica')),
            ],
            options={
                'verbose_name': 'Personal de Salud',
                'verbose_name_plural': 'Personal de Salud',
            },
        ),
    ]
